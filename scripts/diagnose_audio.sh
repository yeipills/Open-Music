#!/bin/bash
# Script de diagn√≥stico para problemas de audio - Open Music Bot

echo "üîç DIAGN√ìSTICO DE AUDIO - Open Music Bot"
echo "======================================="

echo ""
echo "üì¶ 1. VERIFICANDO DEPENDENCIAS..."
echo "-----------------------------------"

# Verificar yt-dlp
if command -v yt-dlp &> /dev/null; then
    echo "‚úÖ yt-dlp: $(yt-dlp --version)"
else
    echo "‚ùå yt-dlp: NO ENCONTRADO"
fi

# Verificar ffmpeg
if command -v ffmpeg &> /dev/null; then
    echo "‚úÖ ffmpeg: $(ffmpeg -version | head -1)"
else
    echo "‚ùå ffmpeg: NO ENCONTRADO"
fi

# Verificar opus
if ldconfig -p | grep -q opus; then
    echo "‚úÖ libopus: ENCONTRADO"
else
    echo "‚ùå libopus: NO ENCONTRADO"
fi

echo ""
echo "üê≥ 2. VERIFICANDO CONTENEDOR..."
echo "------------------------------"

# Verificar si el contenedor est√° corriendo
if docker ps | grep -q "open-music-bot"; then
    echo "‚úÖ Contenedor: CORRIENDO"
    
    # Obtener logs recientes
    echo ""
    echo "üìã Logs recientes (√∫ltimas 50 l√≠neas):"
    docker logs --tail 50 open-music-bot
    
else
    echo "‚ùå Contenedor: NO CORRIENDO"
fi

echo ""
echo "üîß 3. VERIFICANDO CONFIGURACI√ìN..."
echo "---------------------------------"

# Verificar variables de entorno
echo "Variables de entorno configuradas:"
if [ -f .env ]; then
    echo "‚úÖ Archivo .env: EXISTE"
    grep -E "^(DISCORD_TOKEN|APPLICATION_ID|DEFAULT_VOLUME|OPUS_BITRATE)" .env | sed 's/=.*/=***/' || echo "‚ö†Ô∏è  Variables de Discord no encontradas"
else
    echo "‚ùå Archivo .env: NO EXISTE"
fi

echo ""
echo "üìÅ 4. VERIFICANDO DIRECTORIOS..."
echo "-------------------------------"

# Verificar directorios de datos
for dir in "./data" "./cache" "./config"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir: EXISTE ($(ls -la $dir | wc -l) archivos)"
    else
        echo "‚ùå $dir: NO EXISTE"
    fi
done

echo ""
echo "üéµ 5. PRUEBA R√ÅPIDA DE YT-DLP..."
echo "------------------------------"

# Prueba r√°pida de extracci√≥n
echo "Probando extracci√≥n de audio de video de prueba..."
TEST_URL="https://www.youtube.com/watch?v=dQw4w9WgXcQ"
if command -v yt-dlp &> /dev/null; then
    if yt-dlp --quiet --no-warnings --simulate --format "bestaudio" "$TEST_URL" &> /dev/null; then
        echo "‚úÖ yt-dlp: FUNCIONA CORRECTAMENTE"
    else
        echo "‚ùå yt-dlp: ERROR EN EXTRACCI√ìN"
        echo "Ejecutando con verbose para debug:"
        yt-dlp --verbose --simulate --format "bestaudio" "$TEST_URL" | head -20
    fi
else
    echo "‚ö†Ô∏è  yt-dlp no disponible para prueba"
fi

echo ""
echo "üè• 6. HEALTH CHECK DEL CONTENEDOR..."
echo "----------------------------------"

if docker ps | grep -q "open-music-bot"; then
    HEALTH=$(docker inspect --format='{{.State.Health.Status}}' open-music-bot 2>/dev/null || echo "no-healthcheck")
    echo "Estado de salud: $HEALTH"
    
    if [ "$HEALTH" = "healthy" ]; then
        echo "‚úÖ Contenedor: SALUDABLE"
    elif [ "$HEALTH" = "unhealthy" ]; then
        echo "‚ùå Contenedor: NO SALUDABLE"
    else
        echo "‚ö†Ô∏è  Sin health check configurado"
    fi
fi

echo ""
echo "üí° RECOMENDACIONES:"
echo "=================="
echo "1. Si yt-dlp falla: Actualizar con 'pip3 install --upgrade yt-dlp'"
echo "2. Si ffmpeg falla: Instalar con 'apt-get install ffmpeg'"
echo "3. Si el contenedor no inicia: Verificar variables en .env"
echo "4. Si hay errores de permisos: Verificar docker-compose.yml"
echo "5. Para logs detallados: 'docker logs -f open-music-bot'"

echo ""
echo "üîö Diagn√≥stico completado."