# =====================================
# üéµ OPEN MUSIC BOT - CONFIGURATION
# =====================================
# Copy this file to .env and fill in your values
# cp .env.example .env

# =====================================
# ü§ñ DISCORD CONFIGURATION (REQUIRED)
# =====================================

# Your Discord bot token from https://discord.com/developers/applications
DISCORD_TOKEN=your_discord_bot_token_here

# Your Discord application ID (same as bot user ID)
APPLICATION_ID=your_application_id_here

# Optional: Guild ID for development/testing (leave empty for global commands)
GUILD_ID=

# =====================================
# üéµ AUDIO SETTINGS
# =====================================

# Default volume (0.0 = mute, 1.0 = 100%, 2.0 = 200%)
DEFAULT_VOLUME=0.5

# Opus audio bitrate in bits per second (64000-384000)
# 96000 = 96kbps (default), 128000 = 128kbps (Partner), 384000 = 384kbps (Nitro)
OPUS_BITRATE=96000

# Audio frame size in samples (120/240/480/960/1920/2880)
# 960 = 20ms frames at 48kHz (recommended)
FRAME_SIZE=960

# Maximum song duration in seconds (3600 = 1 hour, 7200 = 2 hours)
MAX_SONG_DURATION=7200

# =====================================
# ‚ö° PERFORMANCE SETTINGS
# =====================================

# LRU cache size (number of cached items)
CACHE_SIZE=100

# Audio file cache size (number of cached audio files)
AUDIO_CACHE_SIZE=50

# Maximum queue size per server
MAX_QUEUE_SIZE=1000

# Worker threads (leave empty for auto-detect based on CPU cores)
WORKER_THREADS=

# Maximum songs allowed in a single playlist
MAX_PLAYLIST_SIZE=100

# =====================================
# üõ°Ô∏è RATE LIMITING & SECURITY
# =====================================

# Commands per minute per user
RATE_LIMIT_PER_USER=20

# =====================================
# üéõÔ∏è FEATURES
# =====================================

# Enable equalizer functionality (true/false)
ENABLE_EQUALIZER=true

# Enable autoplay (experimental - true/false)
ENABLE_AUTOPLAY=false

# =====================================
# üìÅ STORAGE PATHS
# =====================================

# Data directory for persistent storage
DATA_DIR=/app/data

# Cache directory for temporary files
CACHE_DIR=/app/cache

# =====================================
# üìä LOGGING & DEBUGGING
# =====================================

# Rust logging level
# Options: error, warn, info, debug, trace
# Format: level,crate=level (e.g., "info,open_music=debug")
RUST_LOG=info,open_music=debug

# Enable Rust backtraces on panic (0/1/full)
RUST_BACKTRACE=1

# =====================================
# ‚ö° YT-DLP OPTIMIZATION (2025)
# =====================================

# Socket timeout for yt-dlp connections (seconds)
YTDLP_SOCKET_TIMEOUT=15

# Number of retries for failed downloads
YTDLP_RETRIES=2

# Fragment retries for network issues
YTDLP_FRAGMENT_RETRIES=1

# Concurrent fragment downloads (1-4)
YTDLP_CONCURRENT_FRAGMENTS=2

# HTTP chunk size for downloads (1M-10M)
YTDLP_HTTP_CHUNK_SIZE=5M

# =====================================
# üîß ADVANCED SETTINGS (Optional)
# =====================================

# Custom user agent for HTTP requests
# USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

# Proxy settings (if needed)
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=http://proxy.example.com:8080

# =====================================
# üìù EXAMPLE VALUES FOR REFERENCE
# =====================================

# DISCORD_TOKEN=your_bot_token_from_developer_portal
# APPLICATION_ID=your_application_id_number
# GUILD_ID=your_test_server_id_optional

# =====================================
# üîó USEFUL LINKS
# =====================================

# Discord Developer Portal: https://discord.com/developers/applications
# Bot Permissions Calculator: https://discordapi.com/permissions.html
# Documentation: https://github.com/yourusername/open-music-bot

# =====================================
# ‚ö†Ô∏è SECURITY NOTES
# =====================================

# - NEVER commit your .env file to version control
# - Keep your Discord token secure and private
# - Regenerate tokens if compromised
# - Use environment variables in production
# - Limit bot permissions to minimum required